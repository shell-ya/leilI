package com.linkwin.web.controller.trace;

import java.util.List;

import com.linkwin.common.core.domain.entity.SysDept;
import com.linkwin.common.core.domain.entity.SysUser;
import com.linkwin.system.service.ISysDeptService;
import com.linkwin.trace.domain.ConsumerLog;
import com.linkwin.trace.service.IConsumerLogService;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.linkwin.common.annotation.Log;
import com.linkwin.common.enums.BusinessType;
import com.linkwin.common.core.controller.BaseController;
import com.linkwin.common.core.domain.AjaxResult;
import com.linkwin.common.utils.poi.ExcelUtil;
import com.linkwin.common.core.page.TableDataInfo;

/**
 * 消费者信息日志Controller
 * 
 * @author ruoyi
 * @date 2022-05-26
 */
@Controller
@RequestMapping("/trace/consumerLog")
public class ConsumerLogController extends BaseController
{
    private String prefix = "trace/consumerLog";

    @Autowired
    private IConsumerLogService consumerLogService;

    @Autowired
    private ISysDeptService sysDeptService;

    @RequiresPermissions("trace:consumerLog:view")
    @GetMapping()
    public String log()
    {
        return prefix + "/log";
    }

    /**
     * 查询消费者信息日志列表
     */
    @PostMapping("/list")
    @ResponseBody
    public TableDataInfo list(ConsumerLog consumerLog)
    {
        SysUser currentUser = getSysUser();
        if (currentUser.isAdmin()){
            startPage();
            List<ConsumerLog> list = consumerLogService.selectConsumerLogList(consumerLog);
            return getDataTable(list);
        }
        List<Long> deptIds = sysDeptService.selectDeptId(currentUser.getDeptId());
        deptIds.add(getSysUser().getDeptId());
        startPage();
        List<ConsumerLog> list = consumerLogService.selectConsumerLogByDeptId(consumerLog,deptIds);
//        List<ConsumerLog> list = consumerLogService.selectConsumerLogList(consumerLog);
        return getDataTable(list);
    }

    /**
     * 导出消费者信息日志列表
     */
    @Log(title = "消费者信息日志", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    @ResponseBody
    public AjaxResult export(ConsumerLog consumerLog)
    {
        SysUser currentUser = getSysUser();
        List<ConsumerLog> list;
        if (currentUser.isAdmin()) {
            startPage();
            list = consumerLogService.selectConsumerLogList(consumerLog);
        }else {
            List<Long> deptIds = sysDeptService.selectDeptId(currentUser.getDeptId());
            deptIds.add(getSysUser().getDeptId());
            list = consumerLogService.selectConsumerLogByDeptId(consumerLog,deptIds);
        }
//        List<ConsumerLog> list = consumerLogService.selectConsumerLogList(consumerLog);
        ExcelUtil<ConsumerLog> util = new ExcelUtil<ConsumerLog>(ConsumerLog.class);
        return util.exportExcel(list, "消费者信息日志数据");
    }

    /**
     * 新增消费者信息日志
     */
    @GetMapping("/add")
    public String add()
    {
        return prefix + "/add";
    }

    /**
     * 新增保存消费者信息日志
     */
    @Log(title = "消费者信息日志", businessType = BusinessType.INSERT)
    @PostMapping("/add")
    @ResponseBody
    public AjaxResult addSave(ConsumerLog consumerLog)
    {
        return toAjax(consumerLogService.insertConsumerLog(consumerLog));
    }

    /**
     * 修改消费者信息日志
     */
    @GetMapping("/edit/{id}")
    public String edit(@PathVariable("id") Long id, ModelMap mmap)
    {
        ConsumerLog consumerLog = consumerLogService.selectConsumerLogById(id);
        mmap.put("consumerLog", consumerLog);
        return prefix + "/edit";
    }

    /**
     * 修改保存消费者信息日志
     */
    @Log(title = "消费者信息日志", businessType = BusinessType.UPDATE)
    @PostMapping("/edit")
    @ResponseBody
    public AjaxResult editSave(ConsumerLog consumerLog)
    {
        return toAjax(consumerLogService.updateConsumerLog(consumerLog));
    }

    /**
     * 删除消费者信息日志
     */
    @Log(title = "消费者信息日志", businessType = BusinessType.DELETE)
    @PostMapping( "/remove")
    @ResponseBody
    public AjaxResult remove(String ids)
    {
        return toAjax(consumerLogService.deleteConsumerLogByIds(ids));
    }
}
