<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linkwin.system.mapper.SysDeptMapper">

	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
		<result property="agentArea" column="agent_area" />
		<result property="registeredAddress" column="registered_address" />
		<result property="receivingAddress" column="receiving_address" />
		<result property="remark" column="remark" />
		<result property="province" column="province" />
		<result property="city" column="city" />
		<result property="country" column="country" />
		<result property="organLevel" column="organ_level" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.country,d.city,d.country,d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.organ_level,d.status, d.del_flag, d.create_by, d.create_time ,d.agent_area,d.registered_address,d.receiving_address,d.remark
             ,d.province,d.city,d.country,d.organ_level
        from sys_dept d
    </sql>
    
	<select id="selectRoleDeptTree" parameterType="Long" resultType="String">
		select concat(d.dept_id, d.dept_name) as dept_name
		from sys_dept d
			left join sys_role_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>
	
	<select id="selectDeptList" parameterType="SysDept" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
    </select>

	<select id="selectSysDeptListonlyName" parameterType="SysDept" resultMap="SysDeptResult">
		<include refid="selectDeptVo"/>
		where d.del_flag = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
		<if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name = #{deptName}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
	</select>
	<select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>
	
	<select id="selectDeptCount" parameterType="SysDept" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0'
		<if test="deptId != null and deptId != 0"> and dept_id = #{deptId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDeptNameUnique" resultMap="SysDeptResult">
	    <include refid="selectDeptVo"/>
		where dept_name=#{deptName} and parent_id = #{parentId} limit 1
	</select>

	<select id="selectDeptById" parameterType="Long" resultMap="SysDeptResult">
		select d.province ,d.city,d.province provinceid ,d.city cityid,d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select dept_name from sys_dept where dept_id = d.parent_id) parent_name ,d.agent_area,d.registered_address,d.receiving_address,d.remark,d.organ_level
		from sys_dept d
		where d.dept_id = #{deptId}
	</select>

	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysDeptResult">
		select * from sys_dept where find_in_set(#{deptId}, ancestors)
	</select>
	
	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select count(*) from sys_dept where status = 0 and del_flag = '0' and find_in_set(#{deptId}, ancestors)
	</select>

	<insert id="insertDept" parameterType="SysDept">
		insert into sys_dept(
		<if test="deptId != null and deptId != 0">dept_id,</if>
		<if test="parentId != null and parentId != 0">parent_id,</if>
		<if test="deptName != null and deptName != ''">dept_name,</if>
		<if test="ancestors != null and ancestors != ''">ancestors,</if>
		<if test="orderNum != null">order_num,</if>
		<if test="leader != null and leader != ''">leader,</if>
		<if test="phone != null and phone != ''">phone,</if>
		<if test="email != null and email != ''">email,</if>
		<if test="status != null">status,</if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		<if test="province != null and province != ''">province,</if>
		<if test="city != null and city != ''">city,</if>
		<if test="country != null and country != ''">country,</if>
		<if test="agentArea != null and agentArea != ''">agent_area,</if>
		<if test="registeredAddress != null and registeredAddress != ''">registered_address,</if>
		<if test="receivingAddress != null and receivingAddress != ''">receiving_address,</if>
		<if test="remark != null and remark != ''">remark,</if>
		<if test="organLevel != null and organLevel != ''">organ_level,</if>

		create_time
		)values(
		<if test="deptId != null and deptId != 0">#{deptId},</if>
		<if test="parentId != null and parentId != 0">#{parentId},</if>
		<if test="deptName != null and deptName != ''">#{deptName},</if>
		<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
		<if test="orderNum != null">#{orderNum},</if>
		<if test="leader != null and leader != ''">#{leader},</if>
		<if test="phone != null and phone != ''">#{phone},</if>
		<if test="email != null and email != ''">#{email},</if>
		<if test="status != null">#{status},</if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		<if test="province != null and province != ''">#{province},</if>
		<if test="city != null and city != ''">#{city},</if>
		<if test="country != null and country != ''">#{country},</if>
		<if test="agentArea != null and agentArea != ''">#{agentArea},</if>
		<if test="registeredAddress != null and registeredAddress != ''">#{registeredAddress},</if>
		<if test="receivingAddress != null and receivingAddress != ''" >#{receivingAddress},</if>
		<if test="remark != null and remark != ''">#{remark},</if>
		<if test="organLevel != null and organLevel != ''">#{organLevel},</if>

		sysdate()
		)
	</insert>

	<update id="updateDept" parameterType="SysDept">
 		update sys_dept
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
			<if test="province != null and province != ''">province = #{province},</if>
			<if test="city != null and city != ''">city = #{city},</if>
			<if test="country != null and country != ''">country = #{country},</if>
			<if test="organLevel != null and organLevel != ''">organ_level = #{organLevel},</if>

			<if test="agentArea != null and agentArea != ''">agent_area = #{agentArea},</if>
			<if test="registeredAddress != null and registeredAddress != ''">registered_address = #{registeredAddress},</if>
			<if test="receivingAddress != null and receivingAddress != ''">receiving_address = #{receivingAddress},</if>
			<if test="remark != null and remark != ''">remark = #{remark},</if>
			update_time = sysdate()

 		</set>
 		where dept_id = #{deptId}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	 </update>

	<delete id="deleteDeptById" parameterType="Long">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>
	
	<update id="updateDeptStatusNormal" parameterType="Long">
 	    update sys_dept set status = '0' where dept_id in 
 	    <foreach collection="array" item="deptId" open="(" separator="," close=")">
        	#{deptId}
        </foreach>
	</update>

	<select id="selectOrganByCode" resultMap="SysDeptResult">
		select   d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone,d.organ_level,
		       d.email, d.status, d.del_flag, d.create_by, d.create_time ,d.agent_area,d.registered_address,d.receiving_address,d.remark,
				d.province,d.country,d.organ_level,
		       p.name as city
		from bill_order_barcode b
		left join bill_order o on o.order_no=b.order_no
		left join sys_dept d
		left join province p on p.code = d.city
		on o.customer = d.dept_id
		where b.bar_code=#{code} and o.order_type='1'
		order by o.id desc
		limit 1
	</select>


	<select id="selectDeptProvinceList" parameterType="SysDept" resultMap="SysDeptResult">
		select  k.NAME AS province ,
		l.NAME AS city ,
		y.NAME AS county ,d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time ,d.agent_area,d.registered_address,d.receiving_address,d.remark,d.organ_level
		from sys_dept d
		left JOIN province k ON d.province  = k.CODE
		left JOIN province l ON d.city  = l.CODE
		left JOIN province y ON d.country  = y.CODE
		where d.del_flag = '0'
		<if test="deptId != null and deptId != 0">
			AND dept_id = #{deptId}
		</if>
		<if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		order by d.parent_id, d.order_num
	</select>


	<delete id="deleteUserRoleInfos">
		delete from sys_product_organ where organ_code=#{organCode} and product_code in
		<foreach collection="productCodes" item="productCode" open="(" separator="," close=")">
			#{productCode}
		</foreach>
	</delete>

	<insert id="batchInsertOrganPd"  useGeneratedKeys="true" keyProperty="id">
		insert into sys_product_organ( product_code,organ_code) values
		<foreach item="item" index="index" collection="list" separator=",">
			(#{item.productCode},#{item.organCode})
		</foreach>
	</insert>

	<select id="selectCountry" resultMap="SysDeptResult">
		<include refid="selectDeptVo"></include>
		where dept_id = #{deptId} and agent_area like concat('%', #{agentArea}, '%')
	</select>


</mapper> 